[
    // Standard Linux bindings
    {
        "bindings": {
            "home": "menu::SelectFirst",
            "shift-pageup": "menu::SelectFirst",
            "pageup": "menu::SelectFirst",
            "end": "menu::SelectLast",
            "shift-pagedown": "menu::SelectLast",
            "pagedown": "menu::SelectLast",
            "ctrl-n": "menu::SelectNext",
            "tab": "menu::SelectNext",
            "down": "menu::SelectNext",
            "ctrl-p": "workspace::ToggleRightDock", // "menu::SelectPrevious",
            "ctrl-i": "workspace::ToggleBottomDock",
            "shift-tab": "menu::SelectPrevious",
            "up": "menu::SelectPrevious",
            "enter": "menu::Confirm",
            "ctrl-enter": "menu::SecondaryConfirm",
            "ctrl-escape": "menu::Cancel",
            "ctrl-c": "menu::Cancel",
            "escape": "menu::Cancel",
            "alt-shift-enter": "menu::Restart",
            "alt-enter": ["picker::ConfirmInput", { "secondary": false }],
            "ctrl-alt-enter": ["picker::ConfirmInput", { "secondary": true }],
            "ctrl-shift-w": "workspace::CloseWindow",
            "shift-escape": "workspace::ToggleZoom",
            "open": "workspace::Open",
            "ctrl-o": null, //"workspace::Open", disabled due to conflict with vim keybind
            "ctrl-=": ["zed::IncreaseBufferFontSize", { "persist": false }],
            "ctrl-+": ["zed::IncreaseBufferFontSize", { "persist": false }],
            "ctrl--": ["zed::DecreaseBufferFontSize", { "persist": false }],
            "ctrl-0": ["zed::ResetBufferFontSize", { "persist": false }],
            "ctrl-,": "zed::OpenSettings",
            "ctrl-q": null, // zed::Quit,
            "f4": "debugger::Start",
            "shift-f5": "debugger::Stop",
            "ctrl-shift-f5": "debugger::Restart",
            "f6": "debugger::Pause",
            "f7": "debugger::StepOver",
            "ctrl-f11": "debugger::StepInto",
            "shift-f11": "debugger::StepOut",
            "f11": "zed::ToggleFullScreen",
            "ctrl-alt-z": "edit_prediction::RateCompletions",
            "ctrl-shift-i": "edit_prediction::ToggleMenu"
        }
    },
    {
        "context": "Picker || menu",
        "bindings": {
            "up": "menu::SelectPrevious",
            "down": "menu::SelectNext"
        }
    },
    {
        "context": "Editor && (vim_mode == insert || vim_mode == visual)", // "context": "Editor",
        "bindings": {
            "enter": "editor::Newline",
            "escape": "editor::Cancel",
            "shift-backspace": "editor::Backspace",
            "backspace": "editor::Backspace",
            "delete": "editor::Delete",
            "tab": "editor::Tab",
            "shift-tab": "editor::Backtab",
            "ctrl-k": null, //"editor::CutToEndOfLine",
            "ctrl-k ctrl-q": null, //"editor::Rewrap",
            "ctrl-k q": null, //"editor::Rewrap",
            "ctrl-backspace": null, //"editor::DeleteToPreviousWordStart",
            "ctrl-delete": null, //"editor::DeleteToNextWordEnd",
            "cut": "editor::Cut",
            "shift-delete": null, //"editor::Cut",
            "ctrl-x": "editor::Cut",
            "copy": "editor::Copy",
            "ctrl-insert": "editor::Copy",
            "ctrl-c": "editor::Copy",
            "paste": "editor::Paste",
            "shift-insert": "editor::Paste",
            "ctrl-v": "editor::Paste",
            "undo": "editor::Undo",
            "ctrl-z": "editor::Undo",
            "redo": "editor::Redo",
            "ctrl-r": "editor::Redo", // ctrl-y
            "ctrl-shift-z": "editor::Redo",
            "up": "editor::MoveUp",
            "ctrl-up": "editor::LineUp",
            "ctrl-down": "editor::LineDown",
            "pageup": null, //"editor::MovePageUp",
            "alt-pageup": null, //"editor::PageUp",
            "shift-pageup": null, //"editor::SelectPageUp",
            "home": [
                "editor::MoveToBeginningOfLine",
                { "stop_at_soft_wraps": true, "stop_at_indent": true }
            ],
            "down": "editor::MoveDown",
            "pagedown": null, //"editor::MovePageDown",
            "alt-pagedown": null, // "editor::PageDown",
            "shift-pagedown": null, // "editor::SelectPageDown",
            "end": ["editor::MoveToEndOfLine", { "stop_at_soft_wraps": true }],
            "left": "editor::MoveLeft",
            "right": "editor::MoveRight",
            "ctrl-left": null, //"editor::MoveToPreviousWordStart",
            "ctrl-right": null, // "editor::MoveToNextWordEnd",
            "ctrl-home": null, // "editor::MoveToBeginning",
            "ctrl-end": null, // "editor::MoveToEnd",
            "shift-up": "editor::SelectUp",
            "shift-down": "editor::SelectDown",
            "shift-left": "editor::SelectLeft",
            "shift-right": "editor::SelectRight",
            "ctrl-shift-left": "editor::SelectToPreviousWordStart",
            "ctrl-shift-right": "editor::SelectToNextWordEnd",
            "ctrl-shift-home": "editor::SelectToBeginning",
            "ctrl-shift-end": "editor::SelectToEnd",
            "ctrl-a": "editor::SelectAll",
            "ctrl-l": "editor::SelectLine",
            "ctrl-shift-i": "editor::Format",
            "alt-shift-o": "editor::OrganizeImports",
            "shift-home": [
                "editor::SelectToBeginningOfLine",
                { "stop_at_soft_wraps": true, "stop_at_indent": true }
            ],
            "shift-end": [
                "editor::SelectToEndOfLine",
                { "stop_at_soft_wraps": true }
            ],
            "ctrl-alt-space": null, // "editor::ShowCharacterPalette",
            "ctrl-;": null, // "editor::ToggleLineNumbers",
            "ctrl-'": null, // "editor::ToggleSelectedDiffHunks",
            "ctrl-\"": null, //  "editor::ExpandAllDiffHunks",
            "ctrl-i": null, //  "editor::ShowSignatureHelp",
            "alt-g b": null, //  "git::Blame",
            "alt-g m": null, //  "git::OpenModifiedFiles",
            "menu": "editor::OpenContextMenu",
            "shift-f10": "editor::OpenContextMenu",
            "ctrl-shift-e": null, //  "editor::ToggleEditPrediction",
            "f9": null, //  "editor::ToggleBreakpoint",
            "shift-f9": null //  "editor::EditLogBreakpoint"
        }
    },
    {
        "context": "Editor && mode == full",
        "bindings": {
            "shift-enter": null, //  "editor::Newline",
            "ctrl-enter": null, //  "editor::NewlineAbove",
            "ctrl-shift-enter": null, // "editor::NewlineBelow",
            "ctrl-k ctrl-z": null, //  "editor::ToggleSoftWrap",
            "ctrl-k z": null, //  "editor::ToggleSoftWrap",
            "find": "buffer_search::Deploy",
            "ctrl-f": null, // "buffer_search::Deploy",
            "f3": "buffer_search::Deploy", //
            "ctrl-h": null, //  "buffer_search::DeployReplace",
            "ctrl->": null, //  "assistant::QuoteSelection",
            "ctrl-<": null, //  "assistant::InsertIntoEditor",
            "ctrl-alt-e": null, //  "editor::SelectEnclosingSymbol",
            "ctrl-shift-backspace": null, //  "editor::GoToPreviousChange",
            "ctrl-shift-alt-backspace": null, //  "editor::GoToNextChange",
            "alt-enter": null //  "editor::OpenSelectionsInMultibuffer"
        }
    },
    {
        "context": "Editor && mode == full && edit_prediction",
        "bindings": {
            "alt-]": null, // "editor::NextEditPrediction",
            "alt-[": null // "editor::PreviousEditPrediction"
        }
    },
    {
        "context": "Editor && !edit_prediction",
        "bindings": {
            "alt-\\": "editor::ShowEditPrediction"
        }
    },
    {
        "context": "Editor && mode == auto_height",
        "bindings": {
            "ctrl-enter": "editor::Newline",
            "shift-enter": "editor::Newline",
            "ctrl-shift-enter": "editor::NewlineBelow"
        }
    },
    {
        "context": "Markdown",
        "bindings": {
            "copy": "markdown::Copy",
            "ctrl-c": "markdown::Copy"
        }
    },
    {
        "context": "Editor && jupyter && !ContextEditor",
        "bindings": {
            "ctrl-shift-enter": "repl::Run",
            "ctrl-alt-enter": "repl::RunInPlace"
        }
    },
    {
        "context": "Editor && !agent_diff",
        "bindings": {
            "ctrl-k ctrl-r": "git::Restore",
            "ctrl-alt-y": "git::ToggleStaged",
            "alt-y": "git::StageAndNext",
            "alt-shift-y": "git::UnstageAndNext"
        }
    },
    {
        "context": "Editor && editor_agent_diff",
        "bindings": {
            "ctrl-y": "agent::Keep",
            "ctrl-n": "agent::Reject",
            "ctrl-shift-y": "agent::KeepAll",
            "ctrl-shift-n": "agent::RejectAll",
            "shift-ctrl-r": "agent::OpenAgentDiff"
        }
    },
    {
        "context": "AgentDiff",
        "bindings": {
            "ctrl-y": "agent::Keep",
            "ctrl-n": "agent::Reject",
            "ctrl-shift-y": "agent::KeepAll",
            "ctrl-shift-n": "agent::RejectAll"
        }
    },
    {
        "context": "ContextEditor > Editor",
        "bindings": {
            "ctrl-enter": "assistant::Assist",
            "ctrl-s": "workspace::Save",
            "save": "workspace::Save",
            "ctrl-<": "assistant::InsertIntoEditor",
            "shift-enter": "assistant::Split",
            "ctrl-r": "assistant::CycleMessageRole",
            "enter": "assistant::ConfirmCommand",
            "alt-enter": "editor::Newline",
            "ctrl-k c": "assistant::CopyCode",
            "ctrl-g": "search::SelectNextMatch",
            "ctrl-shift-g": "search::SelectPreviousMatch",
            "ctrl-k l": "agent::OpenRulesLibrary"
        }
    },
    {
        "context": "AgentPanel",
        "bindings": {
            "ctrl-n": "agent::NewThread",
            "ctrl-alt-n": "agent::NewTextThread",
            "ctrl-shift-h": "agent::OpenHistory",
            "ctrl-alt-c": "agent::OpenConfiguration",
            "ctrl-alt-p": "agent::OpenRulesLibrary",
            "ctrl-i": "agent::ToggleProfileSelector",
            "ctrl-alt-/": "agent::ToggleModelSelector",
            "ctrl-shift-a": "agent::ToggleContextPicker",
            "ctrl-shift-j": "agent::ToggleNavigationMenu",
            "ctrl-shift-i": "agent::ToggleOptionsMenu",
            "shift-alt-escape": "agent::ExpandMessageEditor",
            "ctrl->": "assistant::QuoteSelection",
            "ctrl-alt-e": "agent::RemoveAllContext",
            "ctrl-shift-e": "project_panel::ToggleFocus",
            "ctrl-shift-enter": "agent::ContinueThread",
            "alt-enter": "agent::ContinueWithBurnMode",
            "ctrl-alt-b": "agent::ToggleBurnMode"
        }
    },
    {
        "context": "AgentPanel > NavigationMenu",
        "bindings": {
            "shift-backspace": "agent::DeleteRecentlyOpenThread"
        }
    },
    {
        "context": "AgentPanel > Markdown",
        "bindings": {
            "copy": "markdown::CopyAsMarkdown",
            "ctrl-c": "markdown::CopyAsMarkdown"
        }
    },
    {
        "context": "AgentPanel && prompt_editor",
        "bindings": {
            "ctrl-n": "agent::NewTextThread",
            "ctrl-alt-t": "agent::NewThread"
        }
    },
    {
        "context": "MessageEditor > Editor",
        "bindings": {
            "enter": "agent::Chat",
            "ctrl-enter": "agent::ChatWithFollow",
            "ctrl-i": "agent::ToggleProfileSelector",
            "shift-ctrl-r": "agent::OpenAgentDiff",
            "ctrl-shift-y": "agent::KeepAll",
            "ctrl-shift-n": "agent::RejectAll"
        }
    },
    {
        "context": "EditMessageEditor > Editor",
        "bindings": {
            "escape": "menu::Cancel",
            "enter": "menu::Confirm",
            "alt-enter": "editor::Newline"
        }
    },
    {
        "context": "AgentFeedbackMessageEditor > Editor",
        "bindings": {
            "escape": "menu::Cancel",
            "enter": "menu::Confirm",
            "alt-enter": "editor::Newline"
        }
    },
    {
        "context": "ContextStrip",
        "bindings": {
            "up": "agent::FocusUp",
            "right": "agent::FocusRight",
            "left": "agent::FocusLeft",
            "down": "agent::FocusDown",
            "backspace": "agent::RemoveFocusedContext",
            "enter": "agent::AcceptSuggestedContext"
        }
    },
    {
        "context": "ThreadHistory",
        "bindings": {
            "backspace": "agent::RemoveSelectedThread"
        }
    },
    {
        "context": "PromptLibrary",
        "bindings": {
            "new": "rules_library::NewRule",
            "ctrl-n": "rules_library::NewRule",
            "ctrl-shift-s": "rules_library::ToggleDefaultRule"
        }
    },
    {
        "context": "BufferSearchBar",
        "bindings": {
            "escape": "buffer_search::Dismiss",
            "tab": "buffer_search::FocusEditor",
            "enter": "search::SelectNextMatch",
            "shift-enter": "search::SelectPreviousMatch",
            "alt-enter": "search::SelectAllMatches",
            "find": "search::FocusSearch",
            "ctrl-f": null, // "search::FocusSearch",
            "ctrl-h": null, //"search::ToggleReplace",
            "ctrl-l": null, //"search::ToggleSelection"
            "f3": "search::FocusSearch" //
        }
    },
    {
        "context": "BufferSearchBar && in_replace > Editor",
        "bindings": {
            "enter": "search::ReplaceNext",
            "ctrl-enter": "search::ReplaceAll"
        }
    },
    {
        "context": "BufferSearchBar && !in_replace > Editor",
        "bindings": {
            "up": "search::PreviousHistoryQuery",
            "down": "search::NextHistoryQuery"
        }
    },
    {
        "context": "ProjectSearchBar",
        "bindings": {
            "escape": "project_search::ToggleFocus",
            "shift-find": "search::FocusSearch",
            "ctrl-shift-f": null, //"search::FocusSearch",
            "ctrl-shift-h": null, // "search::ToggleReplace",
            "alt-ctrl-g": null, // "search::ToggleRegex",
            "alt-ctrl-x": null //"search::ToggleRegex"
        }
    },
    {
        "context": "ProjectSearchBar > Editor",
        "bindings": {
            "up": "search::PreviousHistoryQuery",
            "down": "search::NextHistoryQuery"
        }
    },
    {
        "context": "ProjectSearchBar && in_replace > Editor",
        "bindings": {
            "enter": "search::ReplaceNext",
            "ctrl-alt-enter": "search::ReplaceAll"
        }
    },
    {
        "context": "ProjectSearchView",
        "bindings": {
            "escape": "project_search::ToggleFocus",
            "ctrl-shift-h": null, //"search::ToggleReplace",
            "alt-ctrl-g": null, //"search::ToggleRegex",
            "alt-ctrl-x": null //"search::ToggleRegex"
        }
    },
    {
        "context": "Pane",
        "bindings": {
            "ctrl-1": ["pane::ActivateItem", 0],
            "ctrl-2": ["pane::ActivateItem", 1],
            "ctrl-3": ["pane::ActivateItem", 2],
            "ctrl-4": ["pane::ActivateItem", 3],
            "ctrl-5": ["pane::ActivateItem", 4],
            "ctrl-6": ["pane::ActivateItem", 5],
            "ctrl-7": ["pane::ActivateItem", 6],
            "ctrl-8": ["pane::ActivateItem", 7],
            "ctrl-9": ["pane::ActivateItem", 8],
            "ctrl-0": "pane::ActivateLastItem",
            "ctrl-shift-tab": "pane::ActivatePreviousItem",
            "ctrl-tab": "pane::ActivateNextItem",
            "ctrl-shift-pagedown": "pane::SwapItemLeft",
            "ctrl-shift-pageup": "pane::SwapItemRight",
            "ctrl-f4": ["pane::CloseActiveItem", { "close_pinned": false }],
            "ctrl-w": ["pane::CloseActiveItem", { "close_pinned": false }],
            "ctrl-shift-t": [
                "pane::CloseActiveItem",
                { "close_pinned": false }
            ],
            "alt-ctrl-t": [
                "pane::CloseInactiveItems",
                { "close_pinned": false }
            ],
            "alt-ctrl-shift-w": "workspace::CloseInactiveTabsAndPanes",
            "ctrl-k e": null, //["pane::CloseItemsToTheLeft",{ "close_pinned": false }],
            "ctrl-k t": null, //["pane::CloseItemsToTheRight",{ "close_pinned": false }],
            "ctrl-k u": null, //["pane::CloseCleanItems", { "close_pinned": false }],
            "ctrl-k w": null, //["pane::CloseAllItems", { "close_pinned": false }],
            "ctrl-k ctrl-w": null, //"workspace::CloseAllItemsAndPanes",
            "back": "pane::GoBack",
            "ctrl-alt--": null, // "pane::GoBack",
            "ctrl-alt-_": null, //  "pane::GoForward",
            "forward": "pane::GoForward",
            "ctrl-alt-g": null, //  "search::SelectNextMatch",
            "f3": "search::SelectNextMatch",
            "ctrl-alt-shift-g": null, //  "search::SelectPreviousMatch",
            "shift-f3": "search::SelectPreviousMatch",
            "shift-find": "project_search::ToggleFocus",
            "ctrl-shift-f": "project_search::ToggleFocus",
            "ctrl-alt-shift-h": null, //  "search::ToggleReplace",
            "ctrl-alt-shift-l": null, //  "search::ToggleSelection",
            "alt-enter": "search::SelectAllMatches",
            "alt-c": null, //  "search::ToggleCaseSensitive",
            "alt-w": null, //  "search::ToggleWholeWord",
            "alt-find": "project_search::ToggleFilters",
            "alt-ctrl-f": null, //  "project_search::ToggleFilters",
            "ctrl-alt-shift-r": null, //  "search::ToggleRegex",
            "ctrl-alt-shift-x": null, //  "search::ToggleRegex",
            "alt-r": null, //  "search::ToggleRegex",
            "ctrl-k shift-enter": null //  "pane::TogglePinTab"
        }
    },
    // Bindings from VS Code
    {
        "context": "Editor",
        "bindings": {
            "ctrl-[": null, // "editor::Outdent",
            "ctrl-]": null, // "editor::Indent",
            "shift-alt-up": null, //"editor::AddSelectionAbove", // Insert Cursor Above
            "shift-alt-down": null, // "editor::AddSelectionBelow", // Insert Cursor Below
            "ctrl-shift-k": null, // "editor::DeleteLine",
            "alt-up": null, // "editor::MoveLineUp",
            "alt-down": null, //"editor::MoveLineDown",
            "ctrl-alt-shift-up": null, // "editor::DuplicateLineUp",
            "ctrl-d": "editor::DuplicateLineDown",
            "alt-shift-right": null, // "editor::SelectLargerSyntaxNode", // Expand Selection
            "alt-shift-left": null, //  "editor::SelectSmallerSyntaxNode", // Shrink Selection
            "ctrl-shift-l": null, //  "editor::SelectAllMatches", // Select all occurrences of current selection
            "ctrl-f2": null, //  "editor::SelectAllMatches", // Select all occurrences of current word
            "ctrl-shift-d": null, // ["editor::SelectNext", { "replace_newest": false }], // editor.action.addSelectionToNextFindMatch  / find_under_expand
            "ctrl-shift-down": null, //[ "editor::SelectNext", { "replace_newest": false } ], // editor.action.addSelectionToNextFindMatch
            "ctrl-shift-up": null, //[ "editor::SelectPrevious", { "replace_newest": false } ], // editor.action.addSelectionToPreviousFindMatch
            "ctrl-k ctrl-d": null, //["editor::SelectNext", { "replace_newest": true }], // editor.action.moveSelectionToNextFindMatch  / find_under_expand_skip
            "ctrl-k ctrl-shift-d": null, //[ "editor::SelectPrevious", { "replace_newest": true } ], // editor.action.moveSelectionToPreviousFindMatch
            "ctrl-k ctrl-i": null, // "editor::Hover",
            "ctrl-\\": [
                "editor::ToggleComments",
                { "advance_downwards": false }
            ],
            "ctrl-u": null, // "editor::UndoSelection",
            "ctrl-shift-u": null, // "editor::RedoSelection",
            "f8": "editor::GoToDiagnostic",
            "shift-f8": "editor::GoToPreviousDiagnostic",
            "f2": "editor::Rename",
            "f12": "editor::GoToDefinition",
            "alt-f12": "editor::GoToDefinitionSplit",
            "ctrl-shift-f10": "editor::GoToDefinitionSplit",
            "ctrl-f12": "editor::GoToTypeDefinition",
            "shift-f12": "editor::GoToImplementation",
            "alt-ctrl-f12": "editor::GoToTypeDefinitionSplit",
            "alt-shift-f12": "editor::FindAllReferences",
            "ctrl-m": null, // "editor::MoveToEnclosingBracket",
            "ctrl-|": null, // "editor::MoveToEnclosingBracket",
            "ctrl-{": null, // "editor::Fold",
            "ctrl-}": null, // "editor::UnfoldLines",
            "ctrl-k ctrl-l": null, // "editor::ToggleFold",
            "ctrl-k ctrl-[": null, // "editor::FoldRecursive",
            "ctrl-k ctrl-]": null, // "editor::UnfoldRecursive",
            "ctrl-k ctrl-1": null, // ["editor::FoldAtLevel", 1],
            "ctrl-k ctrl-2": null, // ["editor::FoldAtLevel", 2],
            "ctrl-k ctrl-3": null, // ["editor::FoldAtLevel", 3],
            "ctrl-k ctrl-4": null, // ["editor::FoldAtLevel", 4],
            "ctrl-k ctrl-5": null, // ["editor::FoldAtLevel", 5],
            "ctrl-k ctrl-6": null, // ["editor::FoldAtLevel", 6],
            "ctrl-k ctrl-7": null, // ["editor::FoldAtLevel", 7],
            "ctrl-k ctrl-8": null, // ["editor::FoldAtLevel", 8],
            "ctrl-k ctrl-9": null, // ["editor::FoldAtLevel", 9],
            "ctrl-k ctrl-0": null, // "editor::FoldAll",
            "ctrl-k ctrl-j": null, // "editor::UnfoldAll",
            "ctrl-shift-space": null, // "editor::ShowWordCompletions",
            "ctrl-.": null, // "editor::ToggleCodeActions",
            "ctrl-k r": null, // "editor::RevealInFileManager",
            "ctrl-k p": null, // "workspace::CopyPath",
            "ctrl-k v": null, // "markdown::OpenPreviewToTheSide",
            "ctrl-shift-v": null, // "markdown::OpenPreview",
            "ctrl-alt-shift-c": null, // "editor::DisplayCursorNames",
            "alt-.": null, // "editor::GoToHunk",
            "alt-,": null // "editor::GoToPreviousHunk"
        }
    },
    {
        "context": "Editor && mode == full",
        "bindings": {
            "ctrl-shift-o": null, //"outline::Toggle",
            "ctrl-g": null //"go_to_line::Toggle"
        }
    },
    {
        "context": "Workspace",
        "bindings": {
            "alt-open": [
                "projects::OpenRecent",
                { "create_new_window": false }
            ],
            // Change the default action on `menu::Confirm` by setting the parameter
            // "alt-ctrl-o": ["projects::OpenRecent", { "create_new_window": true }],
            "alt-ctrl-o": [
                "projects::OpenRecent",
                { "create_new_window": false }
            ],
            "alt-shift-open": [
                "projects::OpenRemote",
                {
                    "from_existing_connection": false,
                    "create_new_window": false
                }
            ],
            // Change to open path modal for existing remote connection by setting the parameter
            // "alt-ctrl-shift-o": "["projects::OpenRemote", { "from_existing_connection": true }]",
            "alt-ctrl-shift-o": [
                "projects::OpenRemote",
                {
                    "from_existing_connection": false,
                    "create_new_window": false
                }
            ],
            "alt-ctrl-shift-b": null, // "git::Branch",
            "alt-shift-enter": null, // "toast::RunAction",
            "ctrl-~": null, // "workspace::NewTerminal",
            "save": "workspace::Save",
            "ctrl-s": "workspace::Save",
            "ctrl-k s": null, // "workspace::SaveWithoutFormat",
            "shift-save": null, // "workspace::SaveAs",
            "ctrl-shift-s": "workspace::SaveAs",
            "new": "workspace::NewFile",
            "ctrl-n": "workspace::NewFile",
            "shift-new": null, // "workspace::NewWindow",
            "ctrl-shift-n": "workspace::NewWindow",
            "ctrl-`": "terminal_panel::ToggleFocus",
            "f10": ["app_menu::OpenApplicationMenu", "Zed"],
            "alt-1": null, // ["workspace::ActivatePane", 0],
            "alt-2": null, // ["workspace::ActivatePane", 1],
            "alt-3": null, // ["workspace::ActivatePane", 2],
            "alt-4": null, // ["workspace::ActivatePane", 3],
            "alt-5": null, // ["workspace::ActivatePane", 4],
            "alt-6": null, // ["workspace::ActivatePane", 5],
            "alt-7": null, // ["workspace::ActivatePane", 6],
            "alt-8": null, // ["workspace::ActivatePane", 7],
            "alt-9": null, // ["workspace::ActivatePane", 8],
            "ctrl-p": "workspace::ToggleRightDock",
            "ctrl-u": "workspace::ToggleLeftDock",
            "ctrl-i": "workspace::ToggleBottomDock",
            "ctrl-alt-y": null, // "workspace::CloseAllDocks",
            "shift-find": null, // "pane::DeploySearch",
            "ctrl-shift-f": null, // "pane::DeploySearch",
            "ctrl-shift-h": null, // ["pane::DeploySearch", { "replace_enabled": true }],
            "ctrl-shift-t": null, // "pane::ReopenClosedItem",
            "ctrl-k ctrl-s": null, // "zed::OpenKeymap",
            "ctrl-k ctrl-t": null, // "theme_selector::Toggle",
            "ctrl-t": null, // "project_symbols::Toggle",
            "ctrl-tab": null, // "tab_switcher::Toggle",
            "ctrl-shift-tab": ["tab_switcher::Toggle", { "select_last": true }],
            "ctrl-e": null, // "file_finder::Toggle",
            "f1": "command_palette::Toggle",
            "ctrl-shift-p": "command_palette::Toggle",
            "ctrl-shift-m": null, // "diagnostics::Deploy",
            "ctrl-shift-e": null, // "project_panel::ToggleFocus",
            "ctrl-shift-b": null, // "outline_panel::ToggleFocus",
            "ctrl-shift-g": null, // "git_panel::ToggleFocus",
            "ctrl-shift-d": null, // "debug_panel::ToggleFocus",
            "ctrl-?": null, // "agent::ToggleFocus",
            "alt-save": null, // "workspace::SaveAll",
            "ctrl-alt-s": null, // "workspace::SaveAll",
            "ctrl-k m": null, // "language_selector::Toggle",
            "escape": "workspace::Unfollow",
            "ctrl-` left": "workspace::ActivatePaneLeft",
            "ctrl-` right": "workspace::ActivatePaneRight",
            "ctrl-` up": "workspace::ActivatePaneUp",
            "ctrl-` down": "workspace::ActivatePaneDown",
            "ctrl-` shift-left": "workspace::SwapPaneLeft",
            "ctrl-` shift-right": "workspace::SwapPaneRight",
            "ctrl-` shift-up": "workspace::SwapPaneUp",
            "ctrl-` shift-down": "workspace::SwapPaneDown",
            "ctrl-shift-x": null, // "zed::Extensions",
            "ctrl-shift-r": null, // "task::Rerun",
            "ctrl-alt-r": null, // "task::Rerun",
            "alt-t": null, // "task::Rerun",
            "alt-shift-t": null, // "task::Spawn",
            "alt-shift-r": null, // ["task::Spawn", { "reveal_target": "center" }],
            // also possible to spawn tasks by name:
            // "foo-bar": ["task::Spawn", { "task_name": "MyTask", "reveal_target": "dock" }]
            // or by tag:
            // "foo-bar": ["task::Spawn", { "task_tag": "MyTag" }],
            "f5": "debugger::RerunLastSession"
        }
    },
    {
        "context": "Workspace && debugger_running",
        "bindings": {
            "f5": null
        }
    },
    {
        "context": "Workspace && debugger_stopped",
        "bindings": {
            "f5": "debugger::Continue"
        }
    },
    {
        "context": "ApplicationMenu",
        "bindings": {
            "f10": "menu::Cancel",
            "left": "app_menu::ActivateMenuLeft",
            "right": "app_menu::ActivateMenuRight"
        }
    },
    // Bindings from Sublime Text
    {
        "context": "Editor",
        "bindings": {
            "ctrl-shift-j": null, // "editor::JoinLines",
            "ctrl-alt-backspace": null, // "editor::DeleteToPreviousSubwordStart",
            "ctrl-alt-h": null, // "editor::DeleteToPreviousSubwordStart",
            "ctrl-alt-delete": null, // "editor::DeleteToNextSubwordEnd",
            "ctrl-alt-d": null, // "editor::DeleteToNextSubwordEnd",
            "ctrl-alt-left": null, // "editor::MoveToPreviousSubwordStart",
            "ctrl-alt-right": null, // "editor::MoveToNextSubwordEnd",
            "ctrl-alt-shift-left": null, // "editor::SelectToPreviousSubwordStart",
            "ctrl-alt-shift-b": null, // "editor::SelectToPreviousSubwordStart",
            "ctrl-alt-shift-right": null, // "editor::SelectToNextSubwordEnd",
            "ctrl-alt-shift-f": null // "editor::SelectToNextSubwordEnd"
        }
    },
    // Bindings from Atom
    {
        "context": "Pane",
        "bindings": {
            "ctrl-` ctrl-up": "pane::SplitUp",
            "ctrl-` ctrl-down": "pane::SplitDown",
            "ctrl-` ctrl-left": "pane::SplitLeft",
            "ctrl-` ctrl-right": "pane::SplitRight"
        }
    },
    // Bindings that should be unified with bindings for more general actions
    {
        "context": "Editor && renaming",
        "bindings": {
            "enter": "editor::ConfirmRename"
        }
    },
    {
        "context": "Editor && showing_completions",
        "bindings": {
            "enter": "editor::ConfirmCompletion",
            "shift-enter": "editor::ConfirmCompletionReplace",
            "tab": "editor::ComposeCompletion"
        }
    },
    // Bindings for accepting edit predictions
    //
    // alt-l is provided as an alternative to tab/alt-tab. and will be displayed in the UI. This is
    // because alt-tab may not be available, as it is often used for window switching.
    {
        "context": "Editor && edit_prediction",
        "bindings": {
            "alt-tab": "editor::AcceptEditPrediction",
            "alt-l": "editor::AcceptEditPrediction",
            "tab": "editor::AcceptEditPrediction",
            "alt-right": "editor::AcceptPartialEditPrediction"
        }
    },
    {
        "context": "Editor && edit_prediction_conflict",
        "bindings": {
            "alt-tab": "editor::AcceptEditPrediction",
            "alt-l": "editor::AcceptEditPrediction",
            "alt-right": "editor::AcceptPartialEditPrediction"
        }
    },
    {
        "context": "Editor && showing_code_actions",
        "bindings": {
            "enter": "editor::ConfirmCodeAction"
        }
    },
    {
        "context": "Editor && (showing_code_actions || showing_completions)",
        "bindings": {
            "ctrl-p": null, // "editor::ContextMenuPrevious",
            "up": "editor::ContextMenuPrevious",
            "ctrl-n": "editor::ContextMenuNext",
            "down": "editor::ContextMenuNext",
            "pageup": "editor::ContextMenuFirst",
            "pagedown": "editor::ContextMenuLast"
        }
    },
    // Custom bindings
    {
        "bindings": {
            "ctrl-alt-shift-f": null, // "workspace::FollowNextCollaborator",
            // Only available in debug builds: opens an element inspector for development.
            "ctrl-alt-i": null // "dev::ToggleInspector"
        }
    },
    {
        "context": "!Terminal",
        "bindings": {
            "ctrl-shift-c": null // "collab_panel::ToggleFocus"
        }
    },
    {
        "context": "!ContextEditor > Editor && mode == full",
        "bindings": {
            "alt-enter": null, // "editor::OpenExcerpts",
            "shift-enter": null, // "editor::ExpandExcerpts",
            "ctrl-alt-enter": null, // "editor::OpenExcerptsSplit",
            "ctrl-shift-e": null, // "pane::RevealInProjectPanel",
            "ctrl-f8": null, // "editor::GoToHunk",
            "ctrl-shift-f8": null, // "editor::GoToPreviousHunk",
            "ctrl-enter": null, // "assistant::InlineAssist",
            "ctrl-": null //: "editor::ToggleInlayHints"
        }
    },
    {
        "context": "PromptEditor",
        "bindings": {
            "ctrl-[": null, // "agent::CyclePreviousInlineAssist",
            "ctrl-]": null, // "agent::CycleNextInlineAssist",
            "ctrl-alt-e": null // "agent::RemoveAllContext"
        }
    },
    {
        "context": "Prompt",
        "bindings": {
            "left": "menu::SelectPrevious",
            "right": "menu::SelectNext",
            "h": "menu::SelectPrevious",
            "l": "menu::SelectNext"
        }
    },
    {
        "context": "ProjectSearchBar && !in_replace",
        "bindings": {
            "ctrl-enter": "project_search::SearchInNew"
        }
    },
    {
        "context": "OutlinePanel && not_editing",
        "bindings": {
            "escape": "menu::Cancel",
            "left": "outline_panel::CollapseSelectedEntry",
            "right": "outline_panel::ExpandSelectedEntry",
            "alt-copy": "workspace::CopyPath",
            "ctrl-alt-c": "workspace::CopyPath",
            "alt-shift-copy": "workspace::CopyRelativePath",
            "alt-ctrl-shift-c": "workspace::CopyRelativePath",
            "alt-ctrl-r": "outline_panel::RevealInFileManager",
            "space": "outline_panel::OpenSelectedEntry",
            "shift-down": "menu::SelectNext",
            "shift-up": "menu::SelectPrevious",
            "alt-enter": "editor::OpenExcerpts",
            "ctrl-alt-enter": "editor::OpenExcerptsSplit"
        }
    },
    {
        "context": "ProjectPanel",
        "bindings": {
            "left": "project_panel::CollapseSelectedEntry",
            "right": "project_panel::ExpandSelectedEntry",
            "new": "project_panel::NewFile",
            "ctrl-n": "project_panel::NewFile",
            "alt-new": "project_panel::NewDirectory",
            "alt-ctrl-n": "project_panel::NewDirectory",
            "cut": "project_panel::Cut",
            "ctrl-x": "project_panel::Cut",
            "copy": "project_panel::Copy",
            "ctrl-insert": "project_panel::Copy",
            "ctrl-c": "project_panel::Copy",
            "paste": "project_panel::Paste",
            "shift-insert": "project_panel::Paste",
            "ctrl-v": "project_panel::Paste",
            "alt-copy": null,
            "ctrl-alt-c": "workspace::CopyPath",
            "alt-shift-copy": "workspace::CopyRelativePath",
            "alt-ctrl-shift-c": "workspace::CopyRelativePath",
            "enter": null, // "project_panel::Rename",
            "f2": "project_panel::Rename",
            "backspace": ["project_panel::Trash", { "skip_prompt": false }],
            "delete": ["project_panel::Trash", { "skip_prompt": false }],
            "shift-delete": ["project_panel::Delete", { "skip_prompt": false }],
            "ctrl-backspace": [
                "project_panel::Delete",
                { "skip_prompt": false }
            ],
            "ctrl-delete": ["project_panel::Delete", { "skip_prompt": false }],
            "alt-ctrl-r": "project_panel::RevealInFileManager",
            "ctrl-shift-enter": "project_panel::OpenWithSystem",
            "shift-find": "project_panel::NewSearchInDirectory",
            "ctrl-alt-shift-f": null, // "project_panel::NewSearchInDirectory",
            "shift-down": "menu::SelectNext",
            "shift-up": "menu::SelectPrevious",
            "escape": "menu::Cancel"
        }
    },
    {
        "context": "ProjectPanel && not_editing",
        "bindings": {
            "space": "project_panel::Open"
        }
    },
    {
        "context": "GitPanel && ChangesList",
        "bindings": {
            "up": "menu::SelectPrevious",
            "down": "menu::SelectNext",
            "enter": "menu::Confirm",
            "alt-y": null, // "git::StageFile",
            "alt-shift-y": null, // "git::UnstageFile",
            "ctrl-alt-y": null, // "git::ToggleStaged",
            "space": "git::ToggleStaged",
            "tab": "git_panel::FocusEditor",
            "shift-tab": "git_panel::FocusEditor",
            "escape": "git_panel::ToggleFocus",
            "ctrl-enter": "git::Commit",
            "ctrl-shift-enter": "git::Amend",
            "alt-enter": "menu::SecondaryConfirm",
            "delete": ["git::RestoreFile", { "skip_prompt": false }],
            "backspace": ["git::RestoreFile", { "skip_prompt": false }],
            "shift-delete": ["git::RestoreFile", { "skip_prompt": false }],
            "ctrl-backspace": ["git::RestoreFile", { "skip_prompt": false }],
            "ctrl-delete": ["git::RestoreFile", { "skip_prompt": false }]
        }
    },
    {
        "context": "GitPanel && CommitEditor",
        "use_key_equivalents": true,
        "bindings": {
            "escape": "git::Cancel"
        }
    },
    {
        "context": "GitCommit > Editor",
        "bindings": {
            "escape": "menu::Cancel",
            "enter": "editor::Newline",
            "ctrl-enter": "git::Commit",
            "ctrl-shift-enter": "git::Amend",
            "alt-l": null // "git::GenerateCommitMessage"
        }
    },
    {
        "context": "GitPanel",
        "bindings": {
            "ctrl-g ctrl-g": null, // "git::Fetch",
            "ctrl-g up": null, // "git::Push",
            "ctrl-g down": null, // "git::Pull",
            "ctrl-g shift-up": null, // "git::ForcePush",
            "ctrl-g d": null, // "git::Diff",
            "ctrl-g backspace": null, // "git::RestoreTrackedFiles",
            "ctrl-g shift-backspace": null, // "git::TrashUntrackedFiles",
            "ctrl-space": null, // "git::StageAll",
            "ctrl-shift-space": "git::UnstageAll"
        }
    },
    {
        "context": "GitDiff > Editor",
        "bindings": {
            "ctrl-enter": "git::Commit",
            "ctrl-shift-enter": "git::Amend",
            "ctrl-space": null, // "git::StageAll",
            "ctrl-shift-space": "git::UnstageAll"
        }
    },
    {
        "context": "AskPass > Editor",
        "bindings": {
            "enter": "menu::Confirm"
        }
    },
    {
        "context": "GitPanel > Editor",
        "bindings": {
            "escape": "git_panel::FocusChanges",
            "tab": "git_panel::FocusChanges",
            "shift-tab": "git_panel::FocusChanges",
            "enter": "editor::Newline",
            "ctrl-enter": "git::Commit",
            "ctrl-shift-enter": "git::Amend",
            "alt-up": "git_panel::FocusChanges",
            "alt-l": "git::GenerateCommitMessage"
        }
    },
    {
        "context": "DebugPanel",
        "bindings": {
            "ctrl-t": null, // "debugger::ToggleThreadPicker",
            "ctrl-i": null, // "debugger::ToggleSessionPicker",
            "shift-alt-escape": "debugger::ToggleExpandItem"
        }
    },
    {
        "context": "VariableList",
        "bindings": {
            "left": "variable_list::CollapseSelectedEntry",
            "right": "variable_list::ExpandSelectedEntry",
            "enter": "variable_list::EditVariable",
            "ctrl-c": null, // "variable_list::CopyVariableValue",
            "ctrl-alt-c": null // "variable_list::CopyVariableName"
        }
    },
    {
        "context": "BreakpointList",
        "bindings": {
            "space": "debugger::ToggleEnableBreakpoint",
            "backspace": "debugger::UnsetBreakpoint"
        }
    },
    {
        "context": "CollabPanel && not_editing",
        "bindings": {
            "ctrl-backspace": "collab_panel::Remove",
            "space": "menu::Confirm",
            "ctrl-up": "collab_panel::MoveChannelUp",
            "ctrl-down": "collab_panel::MoveChannelDown"
        }
    },
    {
        "context": "(CollabPanel && editing) > Editor",
        "bindings": {
            "space": "collab_panel::InsertSpace"
        }
    },
    {
        "context": "ChannelModal",
        "bindings": {
            "tab": "channel_modal::ToggleMode"
        }
    },
    {
        "context": "Picker > Editor",
        "bindings": {
            "escape": "menu::Cancel",
            "up": "menu::SelectPrevious",
            "down": "menu::SelectNext",
            "tab": "picker::ConfirmCompletion",
            "alt-enter": ["picker::ConfirmInput", { "secondary": false }]
        }
    },
    {
        "context": "ChannelModal > Picker > Editor",
        "bindings": {
            "tab": "channel_modal::ToggleMode"
        }
    },
    {
        "context": "FileFinder",
        "bindings": {
            "ctrl-shift-a": null, // "file_finder::ToggleSplitMenu",
            "ctrl-shift-i": null // "file_finder::ToggleFilterMenu"
        }
    },
    {
        "context": "FileFinder || (FileFinder > Picker > Editor) || (FileFinder > Picker > menu)",
        "bindings": {
            "ctrl-shift-p": null, // "file_finder::SelectPrevious",
            "ctrl-j": null, // "pane::SplitDown",
            "ctrl-k": null, // "pane::SplitUp",
            "ctrl-h": null, // "pane::SplitLeft",
            "ctrl-l": null // "pane::SplitRight"
        }
    },
    {
        "context": "TabSwitcher",
        "bindings": {
            "ctrl-shift-tab": "menu::SelectPrevious",
            "ctrl-up": "menu::SelectPrevious",
            "ctrl-down": "menu::SelectNext",
            "ctrl-backspace": "tab_switcher::CloseSelectedItem"
        }
    },
    {
        "context": "Terminal",
        "bindings": {
            "ctrl-alt-space": null, // "terminal::ShowCharacterPalette",
            "copy": "terminal::Copy",
            "ctrl-insert": "terminal::Copy",
            "ctrl-shift-c": "terminal::Copy",
            "paste": "terminal::Paste",
            "shift-insert": "terminal::Paste",
            "ctrl-shift-v": "terminal::Paste",
            "ctrl-enter": "assistant::InlineAssist",
            "alt-b": null, // ["terminal::SendText", "\u001bb"],
            "alt-f": null, // ["terminal::SendText", "\u001bf"],
            "alt-.": null, // ["terminal::SendText", "\u001b."],
            "ctrl-delete": null, // ["terminal::SendText", "\u001bd"],
            // Overrides for conflicting keybindings
            "ctrl-b": ["terminal::SendKeystroke", "ctrl-b"],
            "ctrl-c": ["terminal::SendKeystroke", "ctrl-c"],
            "ctrl-e": ["terminal::SendKeystroke", "ctrl-e"],
            "ctrl-o": ["terminal::SendKeystroke", "ctrl-o"],
            "ctrl-w": ["terminal::SendKeystroke", "ctrl-w"],
            "ctrl-backspace": ["terminal::SendKeystroke", "ctrl-w"],
            "ctrl-shift-a": "editor::SelectAll",
            "find": "buffer_search::Deploy",
            "ctrl-shift-f": "buffer_search::Deploy",
            "ctrl-shift-l": "terminal::Clear",
            "ctrl-shift-w": "pane::CloseActiveItem",
            "up": ["terminal::SendKeystroke", "up"],
            "pageup": ["terminal::SendKeystroke", "pageup"],
            "down": ["terminal::SendKeystroke", "down"],
            "pagedown": ["terminal::SendKeystroke", "pagedown"],
            "escape": ["terminal::SendKeystroke", "escape"],
            "enter": ["terminal::SendKeystroke", "enter"],
            "shift-pageup": "terminal::ScrollPageUp",
            "shift-pagedown": "terminal::ScrollPageDown",
            "shift-up": "terminal::ScrollLineUp",
            "shift-down": "terminal::ScrollLineDown",
            "shift-home": "terminal::ScrollToTop",
            "shift-end": "terminal::ScrollToBottom",
            "ctrl-shift-space": "terminal::ToggleViMode",
            "ctrl-shift-r": "terminal::RerunTask",
            "ctrl-alt-r": "terminal::RerunTask",
            "alt-t": "terminal::RerunTask"
        }
    },
    {
        "context": "ZedPredictModal",
        "bindings": {
            "escape": "menu::Cancel"
        }
    },
    {
        "context": "ConfigureContextServerModal > Editor",
        "bindings": {
            "escape": "menu::Cancel",
            "enter": "editor::Newline",
            "ctrl-enter": "menu::Confirm"
        }
    },
    {
        "context": "Diagnostics",
        "use_key_equivalents": true,
        "bindings": {
            "ctrl-r": "diagnostics::ToggleDiagnosticsRefresh"
        }
    },
    {
        "context": "DebugConsole > Editor",
        "use_key_equivalents": true,
        "bindings": {
            "enter": "menu::Confirm"
        }
    },
    {
        "context": "RunModal",
        "bindings": {
            "ctrl-tab": "pane::ActivateNextItem",
            "ctrl-shift-tab": "pane::ActivatePreviousItem"
        }
    }
]
